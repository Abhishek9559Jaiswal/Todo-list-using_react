{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\Abhishek Jaiswal\\\\my-app\\\\src\\\\Components\\\\toDos\\\\ToDo.js\";\nimport React from 'react';\n//--------importing some module for icons -------//\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons';\n\n// -----------ToDo Component--------------------//\nvar ToDo = function ToDo(props) {\n  return (\n    /*#__PURE__*/\n    //   ---Here We Got props object as toDo , mrakDone deleteTask---------//\n    React.createElement(React.Fragment, null, props.toDo.map(function (task, index) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: task.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col taskBg\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: task.completed ? 'done' : '',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"taskNumber\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 37\n        }\n      }, index + 1), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"taskText\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 37\n        }\n      }, task.title)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"iconsWrap\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        title: \"Completed / Not Completed\",\n        onClick: function onClick(e) {\n          return props.markDone(task.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faCircleCheck,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 41\n        }\n      })), task.completed ? null : /*#__PURE__*/React.createElement(\"span\", {\n        title: \"Edit\",\n        onClick: function onClick() {\n          return props.setUpdateData({\n            id: task.id,\n            title: task.title,\n            completed: task.completed ? true : false\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPen,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        title: \"Delete\",\n        onClick: function onClick() {\n          return props.deleteTask(task.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTrashCan,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 41\n        }\n      })))));\n    }))\n  );\n};\nexport default ToDo;","map":{"version":3,"names":["React","FontAwesomeIcon","faCircleCheck","faPen","faTrashCan","ToDo","props","createElement","Fragment","toDo","map","task","index","key","id","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","completed","title","onClick","e","markDone","icon","setUpdateData","deleteTask"],"sources":["C:/Users/Abhishek Jaiswal/my-app/src/Components/toDos/ToDo.js"],"sourcesContent":["import React from 'react'\r\n//--------importing some module for icons -------//\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons'\r\n\r\n// -----------ToDo Component--------------------//\r\nconst ToDo = (props) => {\r\n    return (\r\n        //   ---Here We Got props object as toDo , mrakDone deleteTask---------//\r\n        <>\r\n            {\r\n                props.toDo.map((task, index) => {\r\n                    return (\r\n                        <React.Fragment key={task.id}>\r\n\r\n                            <div className=\"col taskBg\">\r\n                                {/* setting class name on Complete Condition  */}\r\n                                <div className={task.completed ? 'done' : ''}>\r\n                                    <span className=\"taskNumber\">{index + 1}</span>\r\n                                    <span className=\"taskText\">{task.title}</span>\r\n                                </div>\r\n                                <div className=\"iconsWrap\">\r\n                                    {/* on Clicking markDone Functin is Called in Parent Component by task.id Arguments  */}\r\n                                    <span title='Completed / Not Completed'\r\n                                        onClick={(e) => props.markDone(task.id)}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faCircleCheck} />\r\n                                    </span>\r\n                                    {/* checking Task Is Compleated Or Not  */}\r\n                                    {\r\n                                        task.completed ? null : (\r\n                                            <span title='Edit'\r\n                                                onClick={() => props.setUpdateData({\r\n                                                    id: task.id,\r\n                                                    title: task.title,\r\n                                                    completed: task.completed ? true : false\r\n                                                })}\r\n                                            >\r\n                                                <FontAwesomeIcon icon={faPen} />\r\n                                            </span>)\r\n                                    }\r\n                                    <span title='Delete'\r\n                                        onClick={() => props.deleteTask(task.id)}\r\n                                    >\r\n                                        {/* trash Icon for Deleting Single todo  */}\r\n                                        <FontAwesomeIcon icon={faTrashCan} />\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ToDo"],"mappings":"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"},"metadata":{},"sourceType":"module"}