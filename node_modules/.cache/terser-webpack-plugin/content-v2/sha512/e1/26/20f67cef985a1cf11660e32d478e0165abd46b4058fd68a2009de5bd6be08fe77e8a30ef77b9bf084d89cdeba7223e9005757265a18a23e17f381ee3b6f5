{"map":"{\"version\":3,\"sources\":[\"C:/Users/Abhishek Jaiswal/my-app/src/Components/toDos/AddTaskForm.js\",\"C:/Users/Abhishek Jaiswal/my-app/src/Components/toDos/UpdateForm.js\",\"C:/Users/Abhishek Jaiswal/my-app/src/Components/toDos/ToDo.js\",\"C:/Users/Abhishek Jaiswal/my-app/src/Components/TodoContainer.js\",\"C:/Users/Abhishek Jaiswal/my-app/src/App.js\",\"C:/Users/Abhishek Jaiswal/my-app/src/index.js\"],\"names\":[\"AddTaskForm\",\"props\",\"React\",\"createElement\",\"Fragment\",\"className\",\"value\",\"newTask\",\"onChange\",\"e\",\"setNewTask\",\"target\",\"type\",\"onClick\",\"addTask\",\"UpdateForm\",\"updateData\",\"title\",\"changeTask\",\"updateTask\",\"cancelUpdate\",\"ToDo\",\"toDo\",\"map\",\"task\",\"index\",\"key\",\"id\",\"completed\",\"markDone\",\"FontAwesomeIcon\",\"icon\",\"faCircleCheck\",\"setUpdateData\",\"faPen\",\"deleteTask\",\"faTrashCan\",\"TodoContainer\",\"_useState\",\"useState\",\"jsonTodos\",\"_useState2\",\"_slicedToArray\",\"setToDo\",\"_useState3\",\"_useState4\",\"_useState5\",\"_useState6\",\"newEntry\",\"filterRecord\",\"_toConsumableArray\",\"filter\",\"UpdatedObject\",\"concat\",\"Date\",\"now\",\"completeTask\",\"_objectSpread\",\"newTasks\",\"App\",\"json\",\"setjson\",\"loading\",\"setLoading\",\"useEffect\",\"fetch\",\"then\",\"response\",\"setTimeout\",\"Bars\",\"height\",\"width\",\"color\",\"ariaLabel\",\"visible\",\"ReactDOM\",\"createRoot\",\"document\",\"getElementById\",\"render\",\"StrictMode\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react'\\r\\n\\r\\n// --------AddTask Component-------------------//\\r\\n\\r\\nconst AddTaskForm = (props) => {\\r\\n    // here we got props object as newTask , add Task , \\r\\n    return (\\r\\n        //------------   Add a new Task --------------//\\r\\n        <>\\r\\n            <div className=\\\"row mb-3\\\">\\r\\n                <div className=\\\"col\\\">\\r\\n                    <input\\r\\n                        value={props.newTask}\\r\\n                        onChange={(e) => props.setNewTask(e.target.value)}\\r\\n                        className='form-control form-control-lg'\\r\\n                        type=\\\"text\\\" />\\r\\n                </div>\\r\\n                <div className=\\\"col-auto\\\">\\r\\n                    {/* --------Add Task Button----------- */}\\r\\n                    <button\\r\\n                        onClick={props.addTask}\\r\\n                        className='btn btn-lg btn-success'>Add Task</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </>\\r\\n    )\\r\\n}\\r\\n// finally Export this Module \\r\\nexport default AddTaskForm\",\"import React from 'react'\\r\\n\\r\\n// -----------UpdateForm Component------------// \\r\\nconst UpdateForm = (props) => {\\r\\n    // ------props object we got updateData , cancelUpdate , updateTask ---------//\\r\\n    return (\\r\\n        <>\\r\\n            {/* Update Task  */}\\r\\n            < div className=\\\"row mb-3\\\">\\r\\n                <div className=\\\"col\\\">\\r\\n                    <input type=\\\"text\\\"\\r\\n                        value={props.updateData && props.updateData.title}\\r\\n                        onChange={props.changeTask}\\r\\n                        className='form-control form-control-sm'\\r\\n                    />\\r\\n                </div>\\r\\n                <div className=\\\"col-auto\\\">\\r\\n                    {/* update btn  */}\\r\\n                    <button\\r\\n                        onClick={props.updateTask}\\r\\n                        className=\\\"btn btn-sm btn-success mr-20\\\">\\r\\n                        Update\\r\\n                    </button>\\r\\n                    {/* cancel btn  */}\\r\\n                    <button className=\\\"btn btn-sm btn-warning\\\"\\r\\n                        onClick={props.cancelUpdate}\\r\\n                    >\\r\\n                        Cancel\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </>\\r\\n    )\\r\\n}\\r\\n\\r\\n\\r\\n// finally exprts this module \\r\\nexport default UpdateForm\",\"import React from 'react'\\r\\n//--------importing some module for icons -------//\\r\\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\\r\\nimport { faCircleCheck, faPen, faTrashCan } from '@fortawesome/free-solid-svg-icons'\\r\\n\\r\\n// -----------ToDo Component--------------------//\\r\\nconst ToDo = (props) => {\\r\\n    return (\\r\\n        //   ---Here We Got props object as toDo , mrakDone deleteTask---------//\\r\\n        <>\\r\\n            {\\r\\n                props.toDo.map((task, index) => {\\r\\n                    return (\\r\\n                        <React.Fragment key={task.id}>\\r\\n\\r\\n                            <div className=\\\"col taskBg\\\">\\r\\n                                {/* setting class name on Complete Condition  */}\\r\\n                                <div className={task.completed ? 'done' : ''}>\\r\\n                                    <span className=\\\"taskNumber\\\">{index + 1}</span>\\r\\n                                    <span className=\\\"taskText\\\">{task.title}</span>\\r\\n                                </div>\\r\\n                                <div className=\\\"iconsWrap\\\">\\r\\n                                    {/* on Clicking markDone Functin is Called in Parent Component by task.id Arguments  */}\\r\\n                                    <span title='Completed / Not Completed'\\r\\n                                        onClick={(e) => props.markDone(task.id)}\\r\\n                                    >\\r\\n                                        <FontAwesomeIcon icon={faCircleCheck} />\\r\\n                                    </span>\\r\\n                                    {/* checking Task Is Compleated Or Not  */}\\r\\n                                    {\\r\\n                                        task.completed ? null : (\\r\\n                                            <span title='Edit'\\r\\n                                                onClick={() => props.setUpdateData({\\r\\n                                                    id: task.id,\\r\\n                                                    title: task.title,\\r\\n                                                    completed: task.completed ? true : false\\r\\n                                                })}\\r\\n                                            >\\r\\n                                                <FontAwesomeIcon icon={faPen} />\\r\\n                                            </span>)\\r\\n                                    }\\r\\n                                    <span title='Delete'\\r\\n                                        onClick={() => props.deleteTask(task.id)}\\r\\n                                    >\\r\\n                                        {/* trash Icon for Deleting Single todo  */}\\r\\n                                        <FontAwesomeIcon icon={faTrashCan} />\\r\\n                                    </span>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </React.Fragment>\\r\\n                    )\\r\\n                })\\r\\n            }\\r\\n        </>\\r\\n    )\\r\\n}\\r\\n\\r\\nexport default ToDo\",\"import React, { useState } from 'react';\\r\\nimport './TodoContainer.css'\\r\\n\\r\\n//----------import AddTaskForm , UpdateForm , ToDo Component --------//\\r\\nimport AddTaskForm from './toDos/AddTaskForm'\\r\\nimport UpdateForm from './toDos/UpdateForm'\\r\\nimport ToDo from './toDos/ToDo'\\r\\n\\r\\n//-------------importting BootStrap Module--------------------//\\r\\nimport 'bootstrap/dist/css/bootstrap.min.css';\\r\\n\\r\\n// ------------TodoContainer Component------------------------//\\r\\nfunction TodoContainer(props) {\\r\\n\\r\\n    //----------- Task Todo List State -------------------//\\r\\n    const [toDo, setToDo] = useState(props.jsonTodos);\\r\\n    //------------- Temp State ---------------------------//\\r\\n    const [newTask, setNewTask] = useState('');\\r\\n    const [updateData, setUpdateData] = useState('');\\r\\n\\r\\n\\r\\n    //------------ Add task -------------------//\\r\\n    const addTask = () => {\\r\\n        if (newTask) {\\r\\n            let newEntry = {\\r\\n                id: Date.now(),\\r\\n                title: newTask,\\r\\n                completed: false\\r\\n            }\\r\\n            setToDo([newEntry, ...toDo])\\r\\n            setNewTask('');\\r\\n        }\\r\\n    }\\r\\n\\r\\n    //--------------Delete Task -----------------//\\r\\n    const deleteTask = (id) => {\\r\\n        let newTasks = toDo.filter(task => task.id !== id);\\r\\n        setToDo(newTasks)\\r\\n    }\\r\\n\\r\\n    //-------New Task as Done and Complete--------//\\r\\n    const markDone = (id) => {\\r\\n        let completeTask = toDo.map(task => {\\r\\n            if (task.id === id) {\\r\\n                return ({ ...task, completed: !task.completed });\\r\\n            }\\r\\n            return task;\\r\\n        })\\r\\n        setToDo(completeTask)\\r\\n    }\\r\\n    //--------Cancel update---------------------//\\r\\n    const cancelUpdate = () => {\\r\\n        setUpdateData('');\\r\\n    }\\r\\n\\r\\n    //--------Change task for update --------//\\r\\n    const changeTask = (e) => {\\r\\n        let newEntry = {\\r\\n            id: updateData.id,\\r\\n            title: e.target.value,\\r\\n            completed: updateData.completed ? true : false\\r\\n        }\\r\\n        setUpdateData(newEntry);\\r\\n    }\\r\\n\\r\\n    //---------Update Task -----------------//\\r\\n    const updateTask = () => {\\r\\n        let filterRecord = [...toDo].filter(task => task.id !== updateData.id)\\r\\n        let UpdatedObject = [updateData, ...filterRecord];\\r\\n        setToDo(UpdatedObject);\\r\\n        setUpdateData('')\\r\\n    }\\r\\n\\r\\n    return (\\r\\n        <React.Fragment>\\r\\n            {/* heading of ToDo App  */}\\r\\n            <h2 id='todo-heading'>React ToDo App (fetching API)</h2>\\r\\n            <div className=\\\"container App\\\">\\r\\n\\r\\n                {/*Rendering Two Comp updating Task  && for Adding a New Task  */}\\r\\n                {\\r\\n                    updateData && updateData ? (\\r\\n                        <UpdateForm\\r\\n                            updateData={updateData}\\r\\n                            changeTask={changeTask}\\r\\n                            updateTask={updateTask}\\r\\n                            cancelUpdate={cancelUpdate}\\r\\n\\r\\n                        />\\r\\n                    ) : (\\r\\n                        <AddTaskForm\\r\\n                            newTask={newTask}\\r\\n                            setNewTask={setNewTask}\\r\\n                            addTask={addTask}\\r\\n                        />\\r\\n                    )\\r\\n                }\\r\\n\\r\\n                {/* Display ToDos  */}\\r\\n                <ToDo\\r\\n                    toDo={toDo}\\r\\n                    markDone={markDone}\\r\\n                    setUpdateData={setUpdateData}\\r\\n                    deleteTask={deleteTask}\\r\\n                />\\r\\n\\r\\n            </div>\\r\\n        </React.Fragment>\\r\\n    );\\r\\n}\\r\\n\\r\\n\\r\\n//-----------finally Export This File-------------//\\r\\nexport default TodoContainer;\",\"// -----------importing react , useEffect and useState hooks --------//\\r\\nimport React, { useEffect, useState } from 'react'\\r\\n\\r\\nimport './App.css'\\r\\n//---------------import TodoContainer Component-----------------------//\\r\\nimport TodoContainer from './Components/TodoContainer'\\r\\n// --------------------Bars for loading wait animation ---------------//\\r\\nimport { Bars } from \\\"react-loader-spinner\\\";\\r\\n\\r\\n\\r\\n\\r\\n// ----------main Component of this Todo App -------------------------//\\r\\nconst App = () => {\\r\\n\\r\\n    //------after loading json we put whole object in json of useState----//\\r\\n    const [json, setjson] = useState([]);\\r\\n    //------rendering whole App component after loading ----------------//\\r\\n    const [loading, setLoading] = useState(false);\\r\\n\\r\\n    //--------useEffect hook with empty Array dependendency means --------\\r\\n    //-----fetching api with no side effect for disturb our app----------\\r\\n    useEffect(() => {\\r\\n        // inbuilt function for fetch API \\r\\n        fetch(\\\"https://jsonplaceholder.typicode.com/todos\\\")\\r\\n            .then((response) => response.json())\\r\\n            .then((json) => {\\r\\n                setTimeout(() => {\\r\\n                    // after fething json we update json with calling this function\\r\\n                    // setJson that change value of json With help of useEffect Hook\\r\\n                    setjson(json)\\r\\n                    setLoading(true);\\r\\n                }, 1000);\\r\\n                //    console.log(json)\\r\\n            });\\r\\n    }, []);\\r\\n\\r\\n\\r\\n    return (\\r\\n        <div>\\r\\n            {/* after loading Api rendering TodoContainer Component If not ! then Show thw Waiting Bar  */}\\r\\n            {loading ? (\\r\\n                <TodoContainer jsonTodos={json} />\\r\\n            ) : (\\r\\n                <Bars height=\\\"180\\\" width=\\\"180\\\" color=\\\"#4fa94d\\\" ariaLabel=\\\"bars-loading\\\" visible={true} />\\r\\n            )}\\r\\n\\r\\n        </div>\\r\\n    )\\r\\n}\\r\\n\\r\\nexport default App\",\"import React from 'react';\\n// -----------import  reactDOM -------------//\\nimport ReactDOM from 'react-dom/client';\\nimport App from './App';\\n// ----------create root -----------------//\\nconst root = ReactDOM.createRoot(document.getElementById('root'));\\nroot.render(\\n    <React.StrictMode>\\n        <App />\\n    </React.StrictMode>\\n);\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{18:function(e,t,a){e.exports=a(37)},26:function(e,t,a){},28:function(e,t,a){},37:function(e,t,a){\"use strict\";a.r(t);var n=a(0),c=a.n(n),l=a(12),o=a.n(l),r=a(3),i=(a(26),a(17)),s=a(6),m=(a(28),function(e){return c.a.createElement(c.a.Fragment,null,c.a.createElement(\"div\",{className:\"row mb-3\"},c.a.createElement(\"div\",{className:\"col\"},c.a.createElement(\"input\",{value:e.newTask,onChange:function(t){return e.setNewTask(t.target.value)},className:\"form-control form-control-lg\",type:\"text\"})),c.a.createElement(\"div\",{className:\"col-auto\"},c.a.createElement(\"button\",{onClick:e.addTask,className:\"btn btn-lg btn-success\"},\"Add Task\"))))}),u=function(e){return c.a.createElement(c.a.Fragment,null,c.a.createElement(\"div\",{className:\"row mb-3\"},c.a.createElement(\"div\",{className:\"col\"},c.a.createElement(\"input\",{type:\"text\",value:e.updateData&&e.updateData.title,onChange:e.changeTask,className:\"form-control form-control-sm\"})),c.a.createElement(\"div\",{className:\"col-auto\"},c.a.createElement(\"button\",{onClick:e.updateTask,className:\"btn btn-sm btn-success mr-20\"},\"Update\"),c.a.createElement(\"button\",{className:\"btn btn-sm btn-warning\",onClick:e.cancelUpdate},\"Cancel\"))))},d=a(7),p=a(4),E=function(e){return c.a.createElement(c.a.Fragment,null,e.toDo.map(function(t,a){return c.a.createElement(c.a.Fragment,{key:t.id},c.a.createElement(\"div\",{className:\"col taskBg\"},c.a.createElement(\"div\",{className:t.completed?\"done\":\"\"},c.a.createElement(\"span\",{className:\"taskNumber\"},a+1),c.a.createElement(\"span\",{className:\"taskText\"},t.title)),c.a.createElement(\"div\",{className:\"iconsWrap\"},c.a.createElement(\"span\",{title:\"Completed / Not Completed\",onClick:function(a){return e.markDone(t.id)}},c.a.createElement(d.a,{icon:p.a})),t.completed?null:c.a.createElement(\"span\",{title:\"Edit\",onClick:function(){return e.setUpdateData({id:t.id,title:t.title,completed:!!t.completed})}},c.a.createElement(d.a,{icon:p.b})),c.a.createElement(\"span\",{title:\"Delete\",onClick:function(){return e.deleteTask(t.id)}},c.a.createElement(d.a,{icon:p.c})))))}))};a(32);var f=function(e){var t=Object(n.useState)(e.jsonTodos),a=Object(r.a)(t,2),l=a[0],o=a[1],d=Object(n.useState)(\"\"),p=Object(r.a)(d,2),f=p[0],b=p[1],k=Object(n.useState)(\"\"),v=Object(r.a)(k,2),N=v[0],g=v[1];return c.a.createElement(c.a.Fragment,null,c.a.createElement(\"h2\",{id:\"todo-heading\"},\"React ToDo App (fetching API)\"),c.a.createElement(\"div\",{className:\"container App\"},N&&N?c.a.createElement(u,{updateData:N,changeTask:function(e){var t={id:N.id,title:e.target.value,completed:!!N.completed};g(t)},updateTask:function(){var e=Object(s.a)(l).filter(function(e){return e.id!==N.id}),t=[N].concat(Object(s.a)(e));o(t),g(\"\")},cancelUpdate:function(){g(\"\")}}):c.a.createElement(m,{newTask:f,setNewTask:b,addTask:function(){if(f){var e={id:Date.now(),title:f,completed:!1};o([e].concat(Object(s.a)(l))),b(\"\")}}}),c.a.createElement(E,{toDo:l,markDone:function(e){var t=l.map(function(t){return t.id===e?Object(i.a)({},t,{completed:!t.completed}):t});o(t)},setUpdateData:g,deleteTask:function(e){var t=l.filter(function(t){return t.id!==e});o(t)}})))},b=a(16),k=function(){var e=Object(n.useState)([]),t=Object(r.a)(e,2),a=t[0],l=t[1],o=Object(n.useState)(!1),i=Object(r.a)(o,2),s=i[0],m=i[1];return Object(n.useEffect)(function(){fetch(\"https://jsonplaceholder.typicode.com/todos\").then(function(e){return e.json()}).then(function(e){setTimeout(function(){l(e),m(!0)},1e3)})},[]),c.a.createElement(\"div\",null,s?c.a.createElement(f,{jsonTodos:a}):c.a.createElement(b.a,{height:\"180\",width:\"180\",color:\"#4fa94d\",ariaLabel:\"bars-loading\",visible:!0}))};o.a.createRoot(document.getElementById(\"root\")).render(c.a.createElement(c.a.StrictMode,null,c.a.createElement(k,null)))}},[[18,2,1]]]);","extractedComments":[]}